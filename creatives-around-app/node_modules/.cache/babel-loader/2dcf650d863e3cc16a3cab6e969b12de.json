{"ast":null,"code":"export default class DataService {\n  constructor(app) {\n    this.app = app;\n    this.app.state = {\n      user: null\n    };\n    this.setUp();\n  }\n\n  get data() {\n    return this.app.state;\n  }\n\n  set data(newState) {\n    this.app.setState(newState);\n  } // SETTING UP CONTEXT\n\n\n  async setUp() {\n    const user = await this.fetchUser();\n\n    if (!user) {\n      return;\n    }\n\n    const rawLocation = await this.getLocation();\n    const location = {\n      lon: rawLocation.coords.longitude,\n      lat: rawLocation.coords.latitude\n    }; // ONLY FOR TESTING\n\n    await this.updateLocation(location);\n    this.app.setState({ ...this.app.state,\n      user\n    });\n  } // FETCHIN LOGGED IN USER DATA\n\n\n  async fetchUser() {\n    try {\n      const response = await fetch('/api/user');\n      const user = await response.json();\n      return user;\n    } catch (error) {\n      console.log('not ok');\n    }\n  } // CREATING USER\n\n\n  async createUser(user) {\n    try {\n      await fetch('/api/user', {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(user)\n      });\n      console.log('User successfuly created');\n    } catch (error) {\n      console.error(error);\n    }\n  } // FETCHING ORHER USERS BASED ON FILTER\n\n\n  async getUsers(filter) {\n    try {\n      const response = await fetch('/api/user/all', {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(filter)\n      });\n      console.log('Fetching users based on the filter');\n    } catch (error) {\n      console.error(error);\n    }\n  } // LOGOUT\n\n\n  async logout() {\n    try {\n      await fetch('/api/auth/logout');\n      window.location.reload();\n    } catch (error) {\n      console.error(error);\n    }\n  } // GET CURRENT LOCATION OF USER\n\n\n  async getLocation() {\n    return new Promise((res, rej) => {\n      navigator.geolocation.getCurrentPosition(position => {\n        return res(position);\n      }, err => {\n        rej(err);\n      });\n    });\n  } // UPDATE LOCATION\n\n\n  async updateLocation(location) {\n    try {\n      await fetch('/api/user', {\n        method: 'PATCH',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          location\n        })\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/karol/Projects/creatives/creatives-around-frontend/creatives-around-app/src/context/DataService.js"],"names":["DataService","constructor","app","state","user","setUp","data","newState","setState","fetchUser","rawLocation","getLocation","location","lon","coords","longitude","lat","latitude","updateLocation","response","fetch","json","error","console","log","createUser","method","headers","body","JSON","stringify","getUsers","filter","logout","window","reload","Promise","res","rej","navigator","geolocation","getCurrentPosition","position","err"],"mappings":"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","sourcesContent":["export default class DataService {\n  constructor(app) {\n    this.app = app;\n    this.app.state = { user: null };\n    this.setUp();\n  }\n  get data() {\n    return this.app.state;\n  }\n  set data(newState) {\n    this.app.setState(newState);\n  }\n  // SETTING UP CONTEXT\n  async setUp() {\n    const user = await this.fetchUser();\n    if (!user) {\n      return;\n    }\n    const rawLocation = await this.getLocation();\n    const location = {\n      lon: rawLocation.coords.longitude,\n      lat: rawLocation.coords.latitude,\n    };\n    // ONLY FOR TESTING\n    await this.updateLocation(location);\n    this.app.setState({ ...this.app.state, user });\n  }\n  // FETCHIN LOGGED IN USER DATA\n  async fetchUser() {\n    try {\n      const response = await fetch('/api/user');\n      const user = await response.json();\n      return user;\n    } catch (error) {\n      console.log('not ok');\n    }\n  }\n  // CREATING USER\n  async createUser(user) {\n    try {\n      await fetch('/api/user', {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n        },\n        body: JSON.stringify(user),\n      });\n      console.log('User successfuly created');\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  // FETCHING ORHER USERS BASED ON FILTER\n  async getUsers(filter) {\n    try {\n      const response = await fetch('/api/user/all', {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n        },\n        body: JSON.stringify(filter),\n      });\n      console.log('Fetching users based on the filter');\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  // LOGOUT\n  async logout() {\n    try {\n      await fetch('/api/auth/logout');\n      window.location.reload();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  // GET CURRENT LOCATION OF USER\n  async getLocation() {\n    return new Promise((res, rej) => {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          return res(position);\n        },\n        (err) => {\n          rej(err);\n        }\n      );\n    });\n  }\n  // UPDATE LOCATION\n  async updateLocation(location) {\n    try {\n      await fetch('/api/user', {\n        method: 'PATCH',\n        headers: {\n          'content-type': 'application/json',\n        },\n        body: JSON.stringify({ location }),\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}